<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="ff.study.designPattern.concept" type="ff.Study.DesignPattern.Concept.Configurating.ChapterConfigurationSectionGroup, ff.Study.DesignPattern">
      <section name="delegating" type="ff.Study.DesignPattern.Concept.Configurating.DelegatingParagramConfigurationSection, ff.Study.DesignPattern" />
      <section name="generics" type="ff.Study.DesignPattern.Concept.Configurating.GenericsParagramConfigurationSection, ff.Study.DesignPattern" />
    </sectionGroup>
    
    <sectionGroup name="ff.study.designPattern.common" type="fake">
      <section name="objectBuilder" type="fake" />
    </sectionGroup>

  </configSections>

  <!-- 具体配置部分 -->
  <ff.study.designPattern.concept>
    <delegating>
      <examples>
        <add name="AsyncInvoke" description="用Delegate完成异步调用" />
        <add name="MulticastNotify" description="1对n的通知" />
        <add name="AnonymousMethod" description="调用匿名方法" />
      </examples>
      <diagrams>
        <add name="DelegateList" description="Delegate集合与多个抽象方法关联" />
        <add name="CompositeDelegate" description="MulticastDelegate实现机制" />
      </diagrams>
      <pictures>
        <add name="EventHandler" colorized="true" />
      </pictures>
    </delegating>
    <generics>
      <examples>
        <add name="RawGenericFactory" description="通用工厂类" />
        <add name="GenericAdapter" />
      </examples>
      <diagrams>
        <add name="ClassicBuilder" description="经典Builder模式实现" />
      </diagrams>
    </generics>
  </ff.study.designPattern.concept>

  <ff.study.designPattern.common>
    <objectBuilder type="ff.study.designPattern.common.TypeCreator" />
  </ff.study.designPattern.common>
  
</configuration>